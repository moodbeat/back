# Generated by Django 4.2.1 on 2023-06-26 05:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("events", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HelpType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=32,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="Тип помощи",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=128,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(8)],
                        verbose_name="Описание",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[("hr", "HR"), ("chief", "Руководитель")],
                        max_length=10,
                        null=True,
                        verbose_name="Роль",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тип помощи",
                "verbose_name_plural": "Типы помощи",
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        max_length=320,
                        validators=[django.core.validators.MinLengthValidator(4)],
                        verbose_name="Текст",
                    ),
                ),
                (
                    "views",
                    models.PositiveIntegerField(default=0, verbose_name="Просмотров"),
                ),
                ("likes", models.IntegerField(default=0, verbose_name="Понравилось")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время отправки"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statuses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Статус",
                "verbose_name_plural": "Статусы",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="NeedHelp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        max_length=496,
                        validators=[django.core.validators.MinLengthValidator(4)],
                        verbose_name="Комментарий",
                    ),
                ),
                (
                    "viewed",
                    models.BooleanField(default=False, verbose_name="Просмотрено"),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время отправки"
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_help_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Получатель",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_help_requests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Отправитель",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="employees",
                        to="socials.helptype",
                        verbose_name="Тип помощи",
                    ),
                ),
            ],
            options={
                "verbose_name": "Запрос помощи",
                "verbose_name_plural": "Запросы помощи",
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Сотрудник",
                    ),
                ),
                (
                    "entry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="events.entry",
                        verbose_name="Запись",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="events.event",
                        verbose_name="Событие",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лайк",
                "verbose_name_plural": "Лайки",
            },
        ),
        migrations.AddConstraint(
            model_name="like",
            constraint=models.UniqueConstraint(
                fields=("employee", "entry"), name="unique_entry"
            ),
        ),
        migrations.AddConstraint(
            model_name="like",
            constraint=models.UniqueConstraint(
                fields=("employee", "event"), name="unique_event"
            ),
        ),
    ]
